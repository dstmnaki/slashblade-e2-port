@name SlashBlade_Project/Yamato by Naki
@persist [AnimationData AnimationDataName Animations Sounds Colors]:table AttackType NormalSProps HasForceEdge DodgeCounter UpwardForce ApplyForce Frame FrameTime Sheath Sheathing AnimationTime FrameCount AnimationSpeedMult W S Shift CoolDown JudgementCut JudgementCutVal JudgementCutCount BlockAttack JudgementCutOrbs:table Count CurrentFrameTime AirTime AirTime2 DamageFrame DamageData:table HealBlock SummonedSwords:table SummonedSwordDelay SummonedSwordFlip BladeIndexTest CanDoubleJump CanTaunt Dead EndAttack AutoNext
@trigger none
if(dupefinished()){reset()}
if(first()){
    
    HasForceEdge=0
    NormalSProps=1
    
    
    #Sounds
    Sounds=table()
    Sounds["voiceLines",table]=table("*vo/npc/male01/question11.wav","*vo/npc/male01/outofyourway02.wav","*vo/npc/male01/whoops01.wav","*vo/npc/male01/thislldonicely01.wav","*vo/npc/male01/squad_affirm06.wav")
    
    Sounds["swingSoundYamato",table]=table("weapons/shovel/shovel_fire.wav")
    Sounds["hitSoundYamato",table]=table("weapons/knife/knife_hit1.wav","weapons/knife/knife_hit2.wav","weapons/knife/knife_hit3.wav","weapons/knife/knife_hit4.wav")
    Sounds["swingSoundYamatoSheath",table]=table("weapons/katana/katana_swing_miss1.wav")
    Sounds["hitSoundYamatoSheath",table]=table("physics/wood/wood_plank_impact_hard2.wav")
    Sounds["sheathSoundYamato",table]=table("ambient/voices/citizen_punches2.wav")
    
    Sounds["swingSoundForceEdge",table]=table("weapons/shovel/shovel_fire.wav")
    Sounds["hitSoundForceEdge",table]=table("")
    Sounds["sheathSoundForceEdge",table]=table("")
    
    Sounds["judgementCutSound",table]=table("ambient/levels/citadel/weapon_disintegrate3.wav")
    Sounds["judgementCutHitSound",table]=table("weapons/knife/knife_hit1.wav","weapons/knife/knife_hit2.wav","weapons/knife/knife_hit3.wav","weapons/knife/knife_hit4.wav")
    
    Sounds["phantomBladeSummonSound",table]=table("")
    Sounds["phantomBladeHitSound",table]=table("physics/surfaces/tile_impact_bullet4.wav")
    Sounds["phantomBladeBreakSound",table]=table("physics/glass/glass_cup_break1.wav","physics/glass/glass_cup_break2.wav")
    
    Sounds["blockingSound",table]=table("weapons/katana/katana_impact_world2.wav")
    Sounds["stepSound",table]=table("physics/body/body_medium_impact_soft3.wav")
    Sounds["doubleJumpSound",table]=table("physics/flesh/flesh_impact_hard2.wav")
    Sounds["grabWeaponSound",table]=table("physics/metal/weapon_impact_soft3.wav")
    Sounds["grabWeaponSound2",table]=table("weapons/grenade_throw.wav")
    
    #Colors
    Colors=table()
    Colors["phantomBladeColor1",vector]=vec(0,175,255)*0.65
    
    Colors["judgementCutColor1",vector]=vec(0,175,255)
    Colors["judgementCutColor2",vector]=vec(0,175,255)*0.5
    Colors["judgementCutColor3",vector]=vec(25,255,255)*1.75
    
    
    #-- Code
    
    #Yamato
    function void swingSoundYamato(){
        owner():emitSound(Sounds["swingSoundYamato",table][randint(Sounds["swingSoundYamato",table]:count()),string],50,100)
    }
    function void hitSoundYamato(){
        owner():emitSound(Sounds["hitSoundYamato",table][randint(Sounds["hitSoundYamato",table]:count()),string],50,100)
    }
    function void swingSoundYamatoSheath(){
        owner():emitSound(Sounds["swingSoundYamatoSheath",table][randint(Sounds["swingSoundYamatoSheath",table]:count()),string],50,100)
    }
    function void hitSoundYamatoSheath(){
        owner():emitSound(Sounds["hitSoundYamatoSheath",table][randint(Sounds["hitSoundYamatoSheath",table]:count()),string],50,100)
    }
    function void sheathSoundYamato(){
        owner():emitSound(Sounds["sheathSoundYamato",table][randint(Sounds["sheathSoundYamato",table]:count()),string],50,150,30)
    }
    
    #Force Edge
    function void swingSoundForceEdge(){
        owner():emitSound(Sounds["swingSoundForceEdge",table][randint(Sounds["swingSoundForceEdge",table]:count()),string],50,100)
    }
    function void hitSoundForceEdge(){
        owner():emitSound(Sounds["hitSoundForceEdge",table][randint(Sounds["hitSoundForceEdge",table]:count()),string],50,100)
    }
    function void sheathSoundForceEdge(){
        owner():emitSound(Sounds["sheathSoundForceEdge",table][randint(Sounds["sheathSoundForceEdge",table]:count()),string],50,100)
    }
    
    #Judgement Cut
    function void judgementCutSound(){
        owner():emitSound(Sounds["judgementCutSound",table][randint(Sounds["judgementCutSound",table]:count()),string],50,100)
    }
    function void entity:judgementCutHitSound(){
        This:emitSound(Sounds["judgementCutHitSound",table][randint(Sounds["judgementCutHitSound",table]:count()),string],50,100)
    }
    
    #Summoned Swords
    function void phantomBladeSummonSound(){
        owner():emitSound(Sounds["phantomBladeSummonSound",table][randint(Sounds["phantomBladeSummonSound",table]:count()),string],50,100)
    }
    function void phantomBladeHitSound(){
        owner():emitSound(Sounds["phantomBladeHitSound",table][randint(Sounds["phantomBladeHitSound",table]:count()),string],50,100)
    }
    function void phantomBladeBreakSound(){
        owner():emitSound(Sounds["phantomBladeBreakSound",table][randint(Sounds["phantomBladeBreakSound",table]:count()),string],50,100)
    }
    
    #Misc
    function void blockingSound(){
        owner():emitSound(Sounds["blockingSound",table][randint(Sounds["blockingSound",table]:count()),string],50,100)
    }
    function void stepSound(){
        owner():emitSound(Sounds["stepSound",table][randint(Sounds["stepSound",table]:count()),string],50,100)
    }
    function void doubleJumpSound(){
        owner():emitSound(Sounds["doubleJumpSound",table][randint(Sounds["doubleJumpSound",table]:count()),string],50,100)
    }
    function void grabWeaponSound(){
        owner():emitSound(Sounds["grabWeaponSound",table][randint(Sounds["grabWeaponSound",table]:count()),string],50,100)
    }
    function void grabWeaponSound2(){
        owner():emitSound(Sounds["grabWeaponSound2",table][randint(Sounds["grabWeaponSound2",table]:count()),string],50,100)
    }
    
    #Voice Lines
    function void voiceLine(){
        owner():emitSound(Sounds["voiceLines",table][randint(1,Sounds["voiceLines",table]:count()),string],50,100)
    }
    
    
    holoCreate(1)
    holoPos(1,owner():pos())
    holoAng(1,ang(0,owner():weapon():angles():yaw(),0))
    holoParent(1,owner():weapon())
    holoAlpha(1,0)
    
    holoCreate(4999)
    holoPos(4999,owner():pos())
    holoAng(4999,ang(0,owner():weapon():angles():yaw(),0))
    holoParent(4999,owner():weapon())
    holoAlpha(4999,0)
    
    holoCreate(2)
    holoPos(2,holoEntity(1):toWorld(vec(0,6,22)))
    holoAng(2,holoEntity(1):toWorld(ang(0,0,0)))
    holoParent(2,holoEntity(1))
    
    holoCreate(3)
    holoPos(3,holoEntity(2):toWorld(vec(0,10,0)))
    holoAng(3,holoEntity(2):toWorld(ang(0,0,0)))
    holoParent(3,holoEntity(2))
    
    holoCreate(4)
    holoPos(4,holoEntity(3):toWorld(vec(0,10,0)))
    holoAng(4,holoEntity(3):toWorld(ang(0,0,0)))
    holoParent(4,holoEntity(3))
    
    holoCreate(5)
    holoPos(5,holoEntity(4):toWorld(vec(0,4,0)))
    holoAng(5,holoEntity(4):toWorld(ang(0,0,0)))
    holoParent(5,holoEntity(4))
    
    holoCreate(6)
    holoPos(6,holoEntity(1):toWorld(vec(0,-6,22)))
    holoAng(6,holoEntity(1):toWorld(ang(0,0,0)))
    holoParent(6,holoEntity(1))
    
    holoCreate(7)
    holoPos(7,holoEntity(6):toWorld(vec(0,-10,0)))
    holoAng(7,holoEntity(6):toWorld(ang(0,0,0)))
    holoParent(7,holoEntity(6))
    
    holoCreate(8)
    holoPos(8,holoEntity(7):toWorld(vec(0,-10,0)))
    holoAng(8,holoEntity(7):toWorld(ang(0,0,0)))
    holoParent(8,holoEntity(7))
    
    holoCreate(9)
    holoPos(9,holoEntity(8):toWorld(vec(0,-4,0)))
    holoAng(9,holoEntity(8):toWorld(ang(0,0,0)))
    holoParent(9,holoEntity(8))
    
    holoCreate(10)
    holoPos(10,holoEntity(9):toWorld(vec(0,0,0)))
    holoAng(10,holoEntity(9):toWorld(ang(90,0,0)))
    holoParent(10,9)
    holoModel(10,"models/weapons/c_models/c_shogun_katana/c_shogun_katana.mdl")
    
    holoCreate(11)
    holoPos(11,holoEntity(5):toWorld(vec(10,0,0)))
    holoAng(11,holoEntity(5):toWorld(ang(90,180,0)))
    holoParent(11,5)
    holoScale(11,vec())
    
    local I = 12
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0,5.7)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.07,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.5)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.068,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.4)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.066,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.3)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.064,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.2)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.062,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.1)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.06,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-1.0)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.058,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-0.9)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.056,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-0.8)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.054,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-0.7)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.052,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-0.6)))
    holoParent(I,I-1)
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(I-1):toWorld(vec(0,0.05,4.1)))
    holoAng(I,holoEntity(I-1):toWorld(ang(0,0,-0.5)))
    holoParent(I,I-1)
    
    for(I=12,25){
        holoModel(I,"models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoScale(I,vec(0.25,0.55,0.7))
        holoColor(I,vec(75))
    }
    
    local I = 599
    holoCreate(I)
    holoPos(I,holoEntity(11):toWorld(vec(0,0,0)))
    holoAng(I,holoEntity(11):toWorld(ang(0,0,0)))
    holoParent(I,11)
    holoModel(I,"models/weapons/c_models/c_shogun_katana/c_shogun_katana.mdl")
    
    
    local I = 600
    holoCreate(I)
    holoPos(I,owner():weapon():toWorld(vec(-6,-6,23)))
    holoAng(I,owner():weapon():toWorld(ang(184,10,-8)))
    holoParent(I,owner():weapon())
    holoScale(I,vec())
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(600):toWorld(vec(0,0,-6)))
    holoAng(I,holoEntity(600):toWorld(ang(0,0,0)))
    holoParent(I,600)
    holoModel(I,"models/sprops/cylinders/size_2/cylinder_3x6.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.5)
    holoScale(I,vec(0.45,0.6,2.5))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(600):toWorld(vec(0,0,0.8)))
    holoAng(I,holoEntity(600):toWorld(ang(0,90,0)))
    holoParent(I,600)
    holoModel(I,"models/sprops/misc/alphanum/alphanum_l_w.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.55)
    holoScale(I,vec(1.1,0.5,0.45))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(600):toWorld(vec(0,0,48*0.7)))
    holoAng(I,holoEntity(600):toWorld(ang(0,90,0)))
    holoParent(I,600)
    holoModel(I,"models/sprops/triangles/regular/etri_12x12.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.85)
    holoScale(I,vec(0.3,0.1,1.5*0.97))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(600):toWorld(vec(0,0,19.35*0.7)))
    holoAng(I,holoEntity(600):toWorld(ang(0,90,0)))
    holoParent(I,600)
    holoModel(I,"models/sprops/rectangles/size_2_5/rect_18x18x3.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.85)
    holoScale(I,vec(0.2,0.02,8.8))
    
    
    local I = 605
    holoCreate(I)
    holoPos(I,holoEntity(9):toWorld(vec(4,0,0)))
    holoAng(I,holoEntity(9):toWorld(ang(90,0,0)))
    holoParent(I,9)
    holoScale(I,vec())
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(605):toWorld(vec(0,0,-6)))
    holoAng(I,holoEntity(605):toWorld(ang(0,0,0)))
    holoParent(I,605)
    holoModel(I,"models/sprops/cylinders/size_2/cylinder_3x6.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.5)
    holoScale(I,vec(0.45,0.6,2.5))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(605):toWorld(vec(0,0,0.8)))
    holoAng(I,holoEntity(605):toWorld(ang(0,90,0)))
    holoParent(I,605)
    holoModel(I,"models/sprops/misc/alphanum/alphanum_l_w.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.55)
    holoScale(I,vec(1.1,0.5,0.45))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(605):toWorld(vec(0,0,48*0.7)))
    holoAng(I,holoEntity(605):toWorld(ang(0,90,0)))
    holoParent(I,605)
    holoModel(I,"models/sprops/triangles/regular/etri_12x12.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.85)
    holoScale(I,vec(0.3,0.1,1.5*0.97))
    
    local I = I + 1
    holoCreate(I)
    holoPos(I,holoEntity(605):toWorld(vec(0,0,19.35*0.7)))
    holoAng(I,holoEntity(605):toWorld(ang(0,90,0)))
    holoParent(I,605)
    holoModel(I,"models/sprops/rectangles/size_2_5/rect_18x18x3.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,vec(125,125,115)*0.85)
    holoScale(I,vec(0.2,0.02,8.8))
    
    #include "SlashBlade_Project/ANIM_Lib"
    
    ShowBones=0
    for(I=1,9){
        holoScale(I,vec(0.2)*ShowBones)
    }
    Animations=table()
    Animations["idle",table]=ANIM_IDLE_01
    Animations["atk_attack_01",table]=ANIM_ATTACK_01
    Animations["atk_attack_01_sheath",table]=ANIM_ATTACK_01_SHEATH
    Animations["atk_attack_02",table]=ANIM_ATTACK_02
    Animations["atk_attack_02_sheath",table]=ANIM_ATTACK_02_SHEATH
    Animations["atk_attack_03",table]=ANIM_ATTACK_03
    Animations["atk_attack_03_sheath",table]=ANIM_ATTACK_03_SHEATH
    Animations["atk_attack_04",table]=ANIM_ATTACK_04
    Animations["atk_attack_04_sheath",table]=ANIM_ATTACK_04_SHEATH
    Animations["atk_attack_05",table]=ANIM_ATTACK_05
    Animations["atk_attack_05_sheath",table]=ANIM_ATTACK_05_SHEATH
    Animations["atk_attack_06",table]=ANIM_ATTACK_06
    Animations["atk_attack_06_sheath",table]=ANIM_ATTACK_06_SHEATH
    Animations["atk_attack_07",table]=ANIM_ATTACK_07
    Animations["atk_attack_07_sheath",table]=ANIM_ATTACK_07_SHEATH
    Animations["atk_attack_force_edge_01",table]=ANIM_ATTACK_FORCE_EDGE_01
    Animations["atk_attack_force_edge_01_sheath",table]=ANIM_ATTACK_FORCE_EDGE_01_SHEATH
    Animations["atk_attack_force_edge_02",table]=ANIM_ATTACK_FORCE_EDGE_02
    Animations["atk_attack_force_edge_02_sheath",table]=ANIM_ATTACK_FORCE_EDGE_02_SHEATH
    Animations["atk_rapid_slash",table]=ANIM_RAPID_SLASH
    Animations["atk_rapid_slash_sheath",table]=ANIM_RAPID_SLASH_SHEATH
    Animations["atk_aerial_rave",table]=ANIM_AERIAL_RAVE
    Animations["atk_aerial_rave_sheath",table]=ANIM_ATTACK_04_SHEATH
    Animations["atk_judgement_cut_start",table]=ANIM_JUDGEMENT_CUT_START
    Animations["atk_judgement_cut",table]=ANIM_JUDGEMENT_CUT
    Animations["atk_judgement_cut_sheath",table]=ANIM_JUDGEMENT_CUT_SHEATH 
    
    DodgeCounter=JudgementCutVal=BladeIndexTest=SummonedSwordFlip=SummonedSwordDelay=AirTime=Count=JudgementCutCount=W=S=Shift=Sheathing=JudgementCut=CoolDown=BlockAttack=0
    CanDoubleJump=FrameCount=1
    BlockAttack=0
    CoolDown=0
    JudgementCut=0
    Sheathing=0
    FrameCount=1
    W=S=Shift=0
    JudgementCutCount=0
    Count=0 
    
    AnimationData=Animations["idle",table]
    AnimationName=AnimationData[1,string]
    Animation=AnimationData[2,table]
    
    JudgementCutOrbs=table(0,0,0,0,0)
    owner():plySetRunSpeed(45)
    owner():plySetWalkSpeed(400)
    
    TargettingVariables=table()
    TargettingVariables["target",entity]=noentity()
    TargettingVariables["table",table]=table()
    
    function void summonedSwordCreate(Count){
        local I = (5000+Count*10)
        local BladeIndexTest2 = I
        holoCreate(I)
        holoPos(I,entity():toWorld(vec(0,0,35)))
        holoAng(I,entity():toWorld(ang(0,0,0)))
        holoScale(I,vec())
        
        local I = I + 1
        holoCreate(I)
        holoPos(I,holoEntity(BladeIndexTest2):toWorld(vec(0,0,-6)))
        holoAng(I,holoEntity(BladeIndexTest2):toWorld(ang(0,0,0)))
        holoParent(I,BladeIndexTest2)
        holoModel(I,"models/sprops/cylinders/size_2/cylinder_3x6.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoColor(I,Colors["phantomBladeColor1",vector])
        holoDisableShading(I,1)
        holoAlpha(I,175)
        holoScale(I,vec(0.45,0.6,2.5))
        
        local I = I + 1
        holoCreate(I)
        holoPos(I,holoEntity(BladeIndexTest2):toWorld(vec(0,0,0.8)))
        holoAng(I,holoEntity(BladeIndexTest2):toWorld(ang(0,90,0)))
        holoParent(I,BladeIndexTest2)
        holoModel(I,"models/sprops/misc/alphanum/alphanum_w.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoColor(I,Colors["phantomBladeColor1",vector])
        holoDisableShading(I,1)
        holoAlpha(I,175)
        holoScale(I,vec(1.1,0.5,0.45))
        
        local I = I + 1
        holoCreate(I)
        holoPos(I,holoEntity(BladeIndexTest2):toWorld(vec(0,0,48*0.7)))
        holoAng(I,holoEntity(BladeIndexTest2):toWorld(ang(0,90,0)))
        holoParent(I,BladeIndexTest2)
        holoModel(I,"models/sprops/triangles/regular/etri_12x12.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoColor(I,Colors["phantomBladeColor1",vector])
        holoDisableShading(I,1)
        holoAlpha(I,175)
        holoScale(I,vec(0.3,0.1,1.5*0.97))
        
        local I = I + 1
        holoCreate(I)
        holoPos(I,holoEntity(BladeIndexTest2):toWorld(vec(0,0,19.35*0.7)))
        holoAng(I,holoEntity(BladeIndexTest2):toWorld(ang(0,90,0)))
        holoParent(I,BladeIndexTest2)
        holoModel(I,"models/sprops/rectangles/size_2_5/rect_18x18x3.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoColor(I,Colors["phantomBladeColor1",vector])
        holoDisableShading(I,1)
        holoAlpha(I,175)
        holoScale(I,vec(0.2,0.02,8.8))
        
        holoPos(BladeIndexTest2,owner():pos()+vec(0,0,-5000))
        holoParent(BladeIndexTest2,owner():weapon())
    }
    function void judgementCutSpawn(){
        JudgementCutOrbs[JudgementCutCount,number]=0
        holoPos(100*JudgementCutCount,owner():aimPos()+mix(-owner():eye(),owner():eyeTrace():hitNormal()*2,0.5)*20)
        holoAng(100*JudgementCutCount,owner():eyeAngles())
    }
    function void judgementCutCreateOrb(Count){
        holoCreate(100*Count)#Shell
        holoCreate(101*Count)#Core
        holoCreate(102*Count)#Blade1
        holoCreate(103*Count)#Blade2
        holoCreate(104*Count)#Blade3
        
        holoModel(100*Count,"models/hunter/misc/sphere2x2.mdl")
        holoScale(100*Count,vec(0.2)*2)
        holoMaterial(100*Count,"models/debug/debugwhite")
        holoColor(100*Count,Colors["judgementCutColor1",vector])
        holoDisableShading(100*Count,1)
        holoAlpha(100*Count,75)
        
        holoPos(101*Count,holoEntity(100*Count):pos())
        holoParent(101*Count,100*Count)
        holoModel(101*Count,"models/hunter/misc/sphere2x2.mdl")
        holoScale(101*Count,vec(0.15)*2)
        holoMaterial(101*Count,"models/debug/debugwhite")
        holoColor(101*Count,Colors["judgementCutColor2",vector])
        holoDisableShading(101*Count,1)
        holoAlpha(101*Count,125)
        
        for(I=102,104){
            holoPos(I*Count,holoEntity(100*Count):pos())
            holoAng(I*Count,select((I-101),ang(25,25,25),ang(45,125,15),ang(16,-75,-90)))
            holoParent(I*Count,100*Count)
            holoModel(I*Count,"models/sprops/misc/alphanum/alphanum_c.mdl")
            holoBodygroup(I*Count,0,2)
            holoScale(I*Count,vec(1.5,0.1,1.75)*vec(1.75+(I-101)/5,1,1.75+(I-101)/5))
            holoMaterial(I*Count,"models/debug/debugwhite")
            holoColor(I*Count,Colors["judgementCutColor3",vector])
            holoDisableShading(I*Count,1)
            holoAlpha(I*Count,175)
        }
        holoPos(100*Count,entity():pos()+vec(0,0,25))
    }
    function void damageAreaSphere(DamageData:table){
        local Pos=DamageData[1,vector]
        local Size=DamageData[2,number]
        local Amount=DamageData[3,number]
        findExcludeEntity(owner())
        findIncludeClass("npc_*")
        findIncludeClass(owner():type())
        findInSphere(Pos,Size)
        local Find = findToArray()
        if(Find:count()>0){
            if(DamageData:exists(4)){
                DamageData[4,entity]:judgementCutHitSound()
            }else{
                switch(AttackType){
                    case 0,
                        hitSoundYamatoSheath()
                    break
                    case 1,
                        hitSoundYamato()
                    break
                    case 2,
                        hitSoundForceEdge()
                    break
                    default,
                        hitSoundYamato()
                    break
                }
            }
        }
        foreach(_,E:entity=Find){
            E:takeDamage(Amount,owner())
        }
    }
    function void damageAreaBox(DamageData:table){
        local Pos=DamageData[1,vector]
        local Size=DamageData[2,vector]
        local Amount=DamageData[3,number]
        findExcludeEntity(owner())
        findIncludeClass("npc_*")
        findIncludeClass(owner():type())
        findInBox(Pos+Size/2,Pos-Size/2)
        local Find = findToArray()
        if(Find:count()>0){
            if(DamageData:exists(4)){
                DamageData[4,entity]:judgementCutHitSound()
            }else{
                switch(AttackType){
                    case 0,
                        hitSoundYamatoSheath()
                    break
                    case 1,
                        hitSoundYamato()
                    break
                    case 2,
                        hitSoundForceEdge()
                    break
                    default,
                        hitSoundYamato()
                    break
                }
            }
        }
        foreach(_,E:entity=Find){
            E:takeDamage(Amount,owner())
        }
    }
    function void nextAnim(){
        if(!Sheathing){
            UpwardForce=200*AirTime
            EndAttack=0
            switch(AnimationData:toString()){
                case Animations["atk_attack_01",table]:toString(),
                    AnimationData=Animations["atk_attack_02",table]
                    AnimationDataName["name",string]="atk_attack_02" 
                    AttackType=0
                    
                    Frame=1
                    FrameTime=0
                    Sheath=0
                    
                    DamageFrame=3
                    DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),45,100)
                    
                    ApplyForce=UpwardForce*!owner():isOnGround()
                    
                    swingSoundYamatoSheath()
                break
                case Animations["atk_attack_02",table]:toString(),
                    AnimationData=Animations["atk_attack_04",table]
                    AnimationDataName["name",string]="atk_attack_04" 
                    AttackType=1
                    
                    Frame=1
                    FrameTime=0
                    Sheath=0
                    
                    DamageFrame=3
                    DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),45,100)
                    AutoNext=1
                    
                    ApplyForce=UpwardForce*!owner():isOnGround()
                    
                    swingSoundYamato()
                break
                case Animations["atk_attack_04",table]:toString(),
                    AnimationData=Animations["atk_attack_05",table]
                    AnimationDataName["name",string]="atk_attack_05" 
                    AttackType=1
                    
                    Frame=1
                    FrameTime=0
                    Sheath=0
                    
                    DamageFrame=3
                    DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),45,100)
                    
                    ApplyForce=UpwardForce*!owner():isOnGround()
                    
                    swingSoundYamato()
                break
                case Animations["atk_attack_05",table]:toString(),
                    AnimationData=Animations["atk_attack_06",table]
                    AnimationDataName["name",string]="atk_attack_06" 
                    AttackType=1
                    
                    Frame=1
                    FrameTime=0
                    Sheath=0
                    
                    DamageFrame=3
                    DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),45,100)
                    
                    ApplyForce=UpwardForce*!owner():isOnGround()
                    
                    swingSoundYamato()
                break
                default,
                    ApplyForce=0
                    EndAttack=1
                break
            }
            if(ApplyForce!=0){
                owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+ApplyForce))
                AirTime2=!owner():isOnGround()
                AirTime-=0.05*!owner():isOnGround()
            }
        }
    }
    function void sheathAnim(){
        Sheathing=1
        Frame=1
        FrameTime=0
        BlockAttack=0
        DamageFrame=0
        switch(AnimationDataName["name",string]){
            case "atk_attack_01",
                AnimationData=Animations["atk_attack_01_sheath",table]
            break
            case "atk_attack_02",
                AnimationData=Animations["atk_attack_02_sheath",table]
            break
            case "atk_attack_03",
                AnimationData=Animations["atk_attack_03_sheath",table]
            break
            case "atk_attack_04",
                AnimationData=Animations["atk_attack_04_sheath",table]
            break
            case "atk_attack_05",
                AnimationData=Animations["atk_attack_05_sheath",table]
            break
            case "atk_attack_06",
                AnimationData=Animations["atk_attack_06_sheath",table]
            break
            case "atk_attack_07",
                AnimationData=Animations["atk_attack_07_sheath",table]
            break
            case "atk_attack_force_edge_01",
                AnimationData=Animations["atk_attack_force_edge_01_sheath",table]
            break
            case "atk_attack_force_edge_02",
                AnimationData=Animations["atk_attack_force_edge_02_sheath",table]
            break
            case "atk_rapid_slash",
                AnimationData=Animations["atk_rapid_slash_sheath",table]
            break
            case "atk_aerial_rave",
                AnimationData=Animations["atk_aerial_rave_sheath",table]
            break
            case "atk_judgement_cut",
                AnimationData=Animations["atk_judgement_cut_sheath",table]
                grabWeaponSound2()
            break
            case "atk_judgement_cut_start",
                AnimationData=Animations["atk_judgement_cut_sheath",table]
                grabWeaponSound2()
            break
        }
    }
    function void attack(){
        if(!Sheathing&(CoolDown==0)&!AutoNext){
            if(!(Shift&(W|S))&!JudgementCut&!EndAttack){
                if(Frame>=FrameCount){
                    nextAnim()
                }
            }
            if(((Frame<=1)|(Frame>=FrameCount))&!JudgementCut){
                EndAttack=0
                if(S&Shift){
                    if(AnimationData!=Animations["atk_attack_07",table]){
                        AnimationData=Animations["atk_attack_07",table]
                        AnimationDataName["name",string]="atk_attack_07" 
                        AttackType=1
                        
                        Frame=1
                        Sheath=0.8
                        FrameTime=0
                        AirTime2=!owner():isOnGround()
                        
                        CoolDown=0.5
                        DamageFrame=0
                        DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,50*owner():isOnGround()):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),vec(55,55,125),100)
                        damageAreaBox(DamageData)
                        
                        owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+(owner():isOnGround() ? 600 : 200*AirTime)))
                        
                        if(owner():isOnGround()){
                            findExcludeEntity(owner())
                            findIncludeClass("npc_*")
                            findIncludeClass(owner():type())
                            findInSphere(DamageData[1,vector],75)
                            foreach(_,E:entity=findToArray()){
                                E:plyApplyForce(vec(-E:vel():x()*0.5,-E:vel():y()*0.5,-E:vel():z()+700))
                            }
                            grabWeaponSound()
                        }
                        
                        swingSoundYamato()
                    }
                }elseif(W&Shift){
                    swingSoundYamato()
                    if(owner():isOnGround()){
                        AnimationData=Animations["atk_rapid_slash",table]
                        AnimationDataName["name",string]="atk_rapid_slash" 
                        AttackType=1
                        
                        FrameTime=0
                        Frame=1
                        Sheath=0.8
                        
                        CoolDown=1
                        DamageFrame=0
                        DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(250,0,0):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),250,150)
                        damageAreaSphere(DamageData)
                        
                        owner():plyApplyForce(ang(0,owner():eyeAngles():yaw(),0):forward()*3500)
                        
                        grabWeaponSound()
                        stepSound()
                    }else{
                        AnimationData=Animations["atk_attack_force_edge_01",table]
                        AnimationDataName["name",string]="atk_attack_force_edge_01" 
                        AttackType=2
                        
                        FrameTime=0
                        Frame=1
                        Sheath=0
                        AirTime2=0
                        
                        CoolDown=1
                        DamageFrame=0
                        DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),vec(55,55,500),200)
                        damageAreaBox(DamageData)
                        
                        owner():plyApplyForce(vec(-owner():vel():x()*0.5,-owner():vel():y()*0.5,-owner():vel():z()-1500))
                        
                        findExcludeEntity(owner())
                        findIncludeClass("npc_*")
                        findIncludeClass(owner():type())
                        findInSphere(DamageData[1,vector],125)
                        foreach(_,E:entity=findToArray()){
                            E:plyApplyForce(vec(-E:vel():x()*0.5,-E:vel():y()*0.5,-E:vel():z()-1500))
                        }
                        
                        grabWeaponSound()
                    }
                }else{
                    if(AnimationData==Animations["idle",table]|AnimationData==Animations["atk_upper_02",table]){
                        if(owner():isOnGround()){
                            AnimationData=Animations["atk_attack_01",table]
                            AnimationDataName["name",string]="atk_attack_01" 
                            AttackType=0
                            
                            FrameTime=0
                            Frame=1
                            Sheath=0
                            AirTime2=!owner():isOnGround()
                            
                            DamageFrame=3
                            DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),55,owner():isOnGround() ? 70 : 100)
                            
                            swingSoundYamatoSheath()
                        }else{
                            AnimationData=Animations["atk_attack_04",table]
                            AnimationDataName["name",string]="atk_attack_04" 
                            AttackType=1
                            
                            FrameTime=0
                            Frame=1
                            Sheath=0
                            AirTime2=!owner():isOnGround()
                            
                            DamageFrame=3
                            DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),55,owner():isOnGround() ? 70 : 100)
                            
                            owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+200*AirTime))
                            
                            swingSoundYamato()
                        }
                        
                    }
                }
                AirTime-=0.05*!owner():isOnGround()
            }
        }
    }
    function void heavyAttack(){
        if(!Sheathing&(CoolDown==0)&!AutoNext){
            if(((Frame<=1)|(Frame>=FrameCount))&!JudgementCut){
                EndAttack=0
                switch(AnimationData:toString()){
                    case Animations["atk_attack_02",table]:toString(),
                        if(owner():isOnGround()){
                            AnimationData=Animations["atk_attack_03",table]
                            AnimationDataName["name",string]="atk_attack_03" 
                            AttackType=1
                            
                            Frame=1
                            FrameTime=0
                            Sheath=0
                            
                            CoolDown=1
                            DamageFrame=3
                            DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),65,200)
                            
                            ApplyForce=UpwardForce*!owner():isOnGround()
                            
                            owner():plyApplyForce(ang(0,owner():eyeAngles():yaw(),0):forward()*1000)
                            
                            swingSoundYamato()
                        }
                    break
                    case Animations["atk_attack_04",table]:toString(),
                        if(!owner():isOnGround()){
                            AnimationData=Animations["atk_aerial_rave",table]
                            AnimationDataName["name",string]="atk_aerial_rave" 
                            AttackType=1
                            
                            Frame=1
                            FrameTime=0
                            Sheath=0.8
                            AirTime-=0.05
                            AirTime2=1
                            
                            CoolDown=1.5
                            DamageFrame=3
                            DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),120,230)
                            
                            ApplyForce=UpwardForce*!owner():isOnGround()
                            
                            owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+500*AirTime))
                            
                            swingSoundYamato()
                        }
                    break
                    default,
                        if(AnimationData==Animations["idle",table]&owner():isOnGround()&HasForceEdge){
                            if(Shift&S){
                                AnimationData=Animations["atk_attack_force_edge_02",table]
                                AnimationDataName["name",string]="atk_attack_force_edge_02" 
                                AttackType=2
                                
                                Frame=1
                                FrameTime=0
                                Sheath=0.8
                                AirTime2=0
                                
                                CoolDown=1
                                DamageFrame=0
                                DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,50*owner():isOnGround()):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),vec(55,55,125),160)
                                damageAreaBox(DamageData)
                                
                                ApplyForce=UpwardForce*!owner():isOnGround()
                                
                                findExcludeEntity(owner())
                                findIncludeClass("npc_*")
                                findIncludeClass(owner():type())
                                findInSphere(DamageData[1,vector],75)
                                foreach(_,E:entity=findToArray()){
                                    E:plyApplyForce(vec(-E:vel():x()*0.5,-E:vel():y()*0.5,-E:vel():z()+700))
                                }
                                
                                owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+(owner():isOnGround() ? 600 : 200*AirTime)))
                                
                                swingSoundForceEdge()
                            }else{
                                AnimationData=Animations["atk_attack_force_edge_01",table]
                                AnimationDataName["name",string]="atk_attack_force_edge_01" 
                                AttackType=2
                                
                                Frame=1
                                FrameTime=0
                                Sheath=0.8
                                CoolDown=1
                                
                                DamageFrame=3
                                DamageData=table(owner():pos()+vec(0,0,owner():height()/2)+vec(50,0,0):rotateAroundAxis(vec(0,1,0),owner():eyeAngles():pitch()*!owner():isOnGround()):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),55,200)
                                
                                swingSoundForceEdge()
                            }
                        }
                    break
                }
            }
        }
    }
    SummonedSwords=table()
    function void summonedSword(Position:vector,_:table){#ExtraData:table){
        if(SummonedSwordDelay==0&holoCanCreate()){
            SummonedSwordFlip=!SummonedSwordFlip
            SummonedSwordDelay=1
            BladeIndexTest++
            if(BladeIndexTest>10){
                BladeIndexTest=1
            }
            BladeIndex=5000+BladeIndexTest*10
            PhantomBlade=holoEntity(BladeIndex)
            holoUnparent(BladeIndex)
            holoPos(BladeIndex,Position)
            holoParent(BladeIndex,holoEntity(4999))
            SummonedSwords:pushTable(table(PhantomBlade,0,1,1))
        }
    }
    CanTaunt=1
    Dead=0
    owner():plySetGravity(1000)
    timer("create_orb",100)
    holoAlpha(10,0)
    holoAlpha(599,255)
    for(I=600,604){
        holoAlpha(I,255*HasForceEdge)
    }
    for(I=606,609){
        holoAlpha(I,0)
    }
}
if(clk("create_orb")){
    if(Count<=4){
        if(holoCanCreate()&(holoRemainingSpawns()>=6)){
            Count++
            judgementCutCreateOrb(Count)
        }
        timer("create_orb",100)
    }else{
        Count=0
        timer("create_blade",100)
    }
}
if(clk("create_blade")){
    if(Count<=9){
        if(holoCanCreate()&(holoRemainingSpawns()>=5)){
            Count++
            summonedSwordCreate(Count)
        }
        timer("create_blade",100)
    }else{
        hint("E2 Ready!",7)
    }
}
interval(50+clamp(50*(((cpuUsage()*1000000)/300)-1),0,250))
if(AirTime2){
    owner():plyApplyForce(vec(0,0,-owner():vel():z()*1*AirTime2*(owner():vel():z()<0)))
}
if(changed(owner():isAlive())){
    if(Dead){
        if(owner():isAlive()){
            timer("reset",100)
        }
    }
    if(!Dead){
        if(!owner():isAlive()){
            Dead=1
        }
    }
}
if(clk("reset")){
    reset()
}
event removed(_) {
    owner():plySetRunSpeed(200)
    owner():plySetWalkSpeed(200)
    owner():plySetGravity(600)
    owner():plySetJumpPower(200)
}
if(changed(JudgementCut)){
    owner():plySetRunSpeed(45*!JudgementCut)
    owner():plySetWalkSpeed(400*!JudgementCut)
}

for(I=1,5){
    Index=I
    JudgementCutOrbs[Index,number]=JudgementCutOrbs[Index,number]+0.08
    JudgementCutOrbs[Index,number]=clamp(JudgementCutOrbs[Index,number],0,1)
    TargetCutOrb=JudgementCutOrbs[Index,number]
    if(TargetCutOrb==1){
        holoPos(100*Index,owner():pos()-vec(0,0,5000))
    }else{
        damageAreaSphere(table(holoEntity(100*Index):pos(),60,150,holoEntity(100*Index)))
    }
    holoScale(100*Index,vec(5*sin((JudgementCutOrbs[Index,number]+0.2)*180)/5))
    for(I2=102,104){
        holoAng(I2*I,holoEntity(I2*I):toWorld(ang(-125,0,0)))
    }
}
W=owner():keyForward()
S=owner():keyBack()
A=owner():keyLeft()
D=owner():keyRight()
Dodge=owner():keyPressed("space")
Shift=owner():keySprint()
Taunt=owner():keyReload()
if(changed(Taunt)&Taunt&CanTaunt){
    CanTaunt=0
    timer("canTaunt",2000)
    owner():emitSound(select(randint(1,5),"*vo/npc/male01/question11.wav","*vo/npc/male01/outofyourway02.wav","*vo/npc/male01/whoops01.wav","*vo/npc/male01/thislldonicely01.wav","*vo/npc/male01/squad_affirm06.wav"),50,100)
}
if(clk("canTaunt")){
    CanTaunt=1
}
SummonedSwordButton=owner():keyUse()
Mouse1=owner():keyAttack1()*(owner():weapon():type()=="none")
Mouse2=owner():keyAttack2()*(owner():weapon():type()=="none")

if(changed(Shift)|changed(JudgementCut)|changed(AnimationData!=Animations["idle",table])){
    owner():plySetJumpPower(Shift*!JudgementCut ? 0 : 500)
    owner():plyGod(Shift*!JudgementCut&(AnimationData==Animations["idle",table]))
}
if(changed(Dodge)&Dodge&!Shift){
    if(CanDoubleJump){
        CanDoubleJump=0
        owner():plyApplyForce(vec(-owner():vel():x()*0.25,-owner():vel():y()*0.25,-owner():vel():z()+550))
        owner():emitSound("physics/flesh/flesh_impact_hard2.wav",50,100)
    }
    
}
if(changed(owner():isOnGround())){
    CanDoubleJump=!owner():isOnGround()
}
SummonedSwordDelay-=0.4
SummonedSwordDelay=clamp(SummonedSwordDelay,0,1)
if(SummonedSwordDelay==0){
    if(changed(SummonedSwordButton)&SummonedSwordButton&Shift){
        summonedSword(owner():pos()+vec(0,25*(SummonedSwordFlip-!SummonedSwordFlip),100):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw()),table())
    }
}
event damage(Victim:entity, Damage:damage) {
    if(Victim==owner()){
        if(Damage:isFallDamage()){
            owner():plySetHealth(owner():health()+Damage:getDamage())
        }else{
            if(Shift&(AnimationData==Animations["idle",table])){
                owner():emitSound("weapons/katana/katana_impact_world2.wav",50,100)
            }else{
                HealBlock=1
            }
        }
    }
}
if(changed(Dodge)&Dodge&Shift&(DodgeCounter<3)){
    if(W|S|A|D){
        Dir=vec(W-S,A-D,0):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw())
        owner():plyApplyForce(-owner():vel()+Dir*3500*(0.5+(0.5*owner():isOnGround())))
        owner():emitSound("physics/body/body_medium_impact_soft3.wav",50,100)
        timer("stop",100)
        DodgeCounter++
        stoptimer("dodgereset")
        timer("dodgereset",1000)
    }elseif(Dodge){
        Dir=vec(0,0,1):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw())
        owner():plyApplyForce(-owner():vel()+Dir*2500*(0.5+(0.5*owner():isOnGround())))
        owner():emitSound("physics/body/body_medium_impact_soft3.wav",50,100)
        timer("stop",100)
        DodgeCounter++
        stoptimer("dodgereset")
        timer("dodgereset",1000)
    }
}
if(clk("dodgereset")){
    DodgeCounter=0
}
if(clk("stop")){
    owner():plyApplyForce(-owner():vel())
}
CoolDown-=0.15
CoolDown=clamp(CoolDown,0,10)
if(CoolDown==0){
    if(changed(Mouse1)&Mouse1){
        attack()
    }
    if(changed(Mouse2)&Mouse2){
        heavyAttack()
    }
}
if(!JudgementCut){
    if(Mouse1&!BlockAttack){
        JudgementCutVal+=0.1
        JudgementCutVal=clamp(JudgementCutVal,0,1)
        if(JudgementCutVal==1){
            Sheath=-5
            JudgementCut=1
            owner():emitSound("weapons/katana/katana_swing_miss1.wav",50,100)
            JudgementCutCount=0
            DamageFrame=0
            AnimationData=Animations["atk_judgement_cut_start",table]
            Dir=vec(-1,0,0):rotateAroundAxis(vec(0,0,1),owner():eyeAngles():yaw())
            owner():plyApplyForce(-owner():vel()+Dir*500*(0.5+(0.5*owner():isOnGround())))
            owner():emitSound("physics/body/body_medium_impact_soft3.wav",50,100)
            timer("stop",200)
        }
    }else{
        JudgementCutVal=0
    }
}elseif(!Sheathing){
    if(changed(Mouse1)&!Mouse1&(Frame>=AnimationData:count())&(CoolDown==0)){
        if(JudgementCutCount<=5){
            if(!owner():isOnGround()){
                owner():plyApplyForce(vec(0,0,-owner():vel():z()+200))
            }
            Frame=1
            FrameTime=0
            Sheath=0
            AnimationData=Animations["atk_judgement_cut",table]
            judgementCutSpawn()
            owner():emitSound("ambient/levels/citadel/weapon_disintegrate3.wav",50,100)
        }
        if(JudgementCutCount>=5){
            JudgementCutCount=0
            JudgementCut=0
            JudgementCutVal=0
            Sheath=0
            Sheathing=1
            CoolDown=1
            AnimationData=Animations["atk_judgement_cut_sheath",table]
            owner():emitSound("weapons/grenade_throw.wav",50,100)
        }
        JudgementCutCount++
    }
}
if(!Mouse1){
    BlockAttack=0
}

for(I=1,SummonedSwords:count()){
    BladeData=SummonedSwords[I,table]
    BladeEnt=BladeData[1,entity]
    if(BladeData[3,number]>0){
        SummonedSwords[I,table][3,number]=SummonedSwords[I,table][3,number]-0.1
        if(SummonedSwords[I,table][3,number]<=0){
            holoUnparent(holoIndex(BladeEnt))
        }
        holoAng(holoIndex(BladeEnt),ang((BladeEnt:pos()-owner():aimPos()):toAngle():pitch()-90,(BladeEnt:pos()-owner():aimPos()):toAngle():yaw(),0))
    }elseif((BladeData[4,number]>0)&(BladeData[2,number])){
        SummonedSwords[I,table][4,number]=SummonedSwords[I,table][4,number]-0.1
        if(SummonedSwords[I,table][4,number]<=0){
            owner():emitSound("physics/glass/glass_cup_break"+randint(1,2)+".wav",50,100)
            holoPos(holoIndex(BladeEnt),owner():pos()+vec(0,0,-5000))
            holoParent(holoIndex(BladeEnt),owner():weapon())
            SummonedSwords:removeTable(I)
        }
    }
}
if(changed(AnimationData:toString())){
    AnimationTime=(AnimationData[clamp(Frame,1,AnimationData:count()),table][11,number]/60)
    CurrentFrameTime=AnimationData[clamp(Frame,1,AnimationData:count()),table][10,number]
    FrameCount=AnimationData:count()
}

event tick(){
    FrameTime+=1*AnimationTime
    FrameTime=clamp(FrameTime,0,AnimationData[clamp(Frame,1,AnimationData:count()),table][10,number])
    if((AnimationData!=Animations["idle",table])){
        if(FrameTime>=AnimationData[clamp(Frame,1,AnimationData:count()),table][10,number]){
            if(Frame<FrameCount){
                FrameTime=0
            }
            Frame++
            Frame=clamp(Frame,1,AnimationData:count())
            if(changed(Frame)&(Frame==DamageFrame)&(DamageFrame!=0)){
                damageAreaSphere(DamageData)
            }
            if(changed(AnimationData[clamp(Frame,1,AnimationData:count()),table][12,number])){
                holoAlpha(10,255*AnimationData[clamp(Frame,1,AnimationData:count()),table][12,number])
                holoAlpha(599,255*(1-AnimationData[clamp(Frame,1,AnimationData:count()),table][12,number]))
            }
            if(changed(AnimationData[clamp(Frame,1,AnimationData:count()),table][13,number])){
                for(I=600,604){
                    holoAlpha(I,255*(1-AnimationData[clamp(Frame,1,AnimationData:count()),table][13,number]))
                }
                for(I=606,609){
                    holoAlpha(I,255*AnimationData[clamp(Frame,1,AnimationData:count()),table][13,number])
                }
            }
            if(Frame<=0){
                Frame=AnimationData:count()
            }
            if(Frame>=AnimationData:count()){
                if(Sheathing){
                    AnimationData=Animations["idle",table]
                    Frame=1
                    Sheathing=0
                }
                Sheathing=0
            }
        }
        if(Frame>=AnimationData:count()){
            if(AutoNext){
                nextAnim()
                Frame=1
                FrameTime=0
                AutoNext=0
            }
            Sheath+=1/35
            if(Sheath>=1){
                sheathAnim()
                Sheath=0
                EndAttack=0
                JudgementCut=0
                JudgementCutVal=0
                JudgementCutCount=0
                Frame=0
                FrameTime=0
                BlockAttack=Mouse1
            }
        }
    }else{
        FrameTime=0
        Sheath=0
    }
    AirTime2-=0.01
    for(I=1,SummonedSwords:count()){
        BladeData=SummonedSwords[I,table]
        BladeEnt=BladeData[1,entity]
        if(!BladeData[2,number]&(BladeData[3,number]<=0)){
            holoPos(holoIndex(BladeEnt),BladeEnt:toWorld(vec(0,0,75)))
            rangerFilter(owner())
            rangerFilter(BladeEnt)
            local R = rangerOffsetHull(75,BladeEnt:pos(),BladeEnt:up(),vec(5,5,0))
            if(R:hit()){
                SummonedSwords[I,table][2,number]=1
                owner():emitSound("physics/surfaces/tile_impact_bullet4.wav",50,100)
                holoPos(holoIndex(BladeEnt),R:pos())
                damageAreaSphere(table(BladeEnt:pos(),25,90,BladeEnt))
            }
        }
    }
    if(changed(AnimationData[clamp(Frame,1,AnimationData:count()),table][12,number])&AnimationData[clamp(Frame,1,AnimationData:count()),table][12,number]==0){
        owner():emitSound("ambient/voices/citizen_punches2.wav",50,150,30)
    }
}
if(owner():isOnGround()){
    AirTime=1
}
Frame=clamp(Frame,1,AnimationData:count())
Sheath=clamp(Sheath,-25,1)
AirTime=clamp(AirTime,0,1)
AirTime2=clamp(AirTime2,0,1)

for(I=1,9){
    holoAng(I,holoEntity(I):parent():toWorld(slerp(quat(AnimationData[clamp(Frame,1,AnimationData:count()),table][I,angle]),quat(AnimationData[((clamp(Frame+1,1,AnimationData:count()))==AnimationData:count()+1) ? 1 : clamp(Frame+1,1,AnimationData:count()),table][I,angle]),FrameTime/AnimationData[clamp(Frame,1,AnimationData:count()),table][10,number]):toAngle()):rotateAroundAxis(owner():eyeAngles():right(),-owner():eyeAngles():pitch()*0.5*(I==1)*!owner():isOnGround()))
}
if(AnimationData==Animations["idle",table]&Shift){
    holoAng(1,holoEntity(1):parent():toWorld(ang(-100,-25,-60)))
    RootPos=vec(5,0,12)
}else{
    RootPos=vec()
}
holoPos(1,holoEntity(1):parent():toWorld(RootPos))
